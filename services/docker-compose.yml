version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-jwt-secret-key
      - JWT_REFRESH_SECRET=your-jwt-refresh-secret
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PROFILE_SERVICE_URL=http://profile-service:3002
      - DOCUMENT_SERVICE_URL=http://document-service:3003
      - TIMELINE_SERVICE_URL=http://timeline-service:3004
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - auth-service
      - profile-service
      - document-service
      - timeline-service
    networks:
      - healthwallet-network

  # Auth Service
  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/healthwallet_auth
      - JWT_SECRET=your-jwt-secret-key
      - JWT_REFRESH_SECRET=your-jwt-refresh-secret
      - FIREBASE_PROJECT_ID=your-firebase-project-id
      - FIREBASE_CLIENT_EMAIL=your-firebase-client-email
      - FIREBASE_PRIVATE_KEY=your-firebase-private-key
    depends_on:
      - mongodb
      - kafka
    networks:
      - healthwallet-network

  # Profile Service
  profile-service:
    build: ./profile-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/healthwallet_profiles
      - JWT_SECRET=your-jwt-secret-key
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mongodb
      - kafka
    networks:
      - healthwallet-network

  # Document Service
  document-service:
    build: ./document-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/healthwallet_documents
      - JWT_SECRET=your-jwt-secret-key
      - FRONTEND_URL=http://localhost:3000
      - AWS_ACCESS_KEY_ID=your-aws-access-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      - AWS_REGION=us-east-1
      - S3_BUCKET_NAME=healthwallet-documents
    depends_on:
      - mongodb
      - kafka
    networks:
      - healthwallet-network

  # Timeline Service
  timeline-service:
    build: ./timeline-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - MONGODB_URI=mongodb://mongodb:27017/healthwallet_timeline
      - JWT_SECRET=your-jwt-secret-key
      - FRONTEND_URL=http://localhost:3000
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - healthwallet-network

  # MongoDB
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - healthwallet-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - healthwallet-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - healthwallet-network

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - healthwallet-network

  # MinIO (S3-compatible object storage for development)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - healthwallet-network

  # Prometheus (monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - healthwallet-network

  # Grafana (monitoring dashboard)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - healthwallet-network

volumes:
  mongodb_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  healthwallet-network:
    driver: bridge
